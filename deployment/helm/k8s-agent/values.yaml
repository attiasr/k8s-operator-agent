# Global overrides for sub chart usage
global:
  labels: {}
  image: {}
  envVars: {}
  files: {}
  volumes: []
  serviceAccount:
    create: true
  monitoring: {}
  service: {}
  affinity: {}
# Can be one of ''|Deployment|StatefulSet|DaemonSet
workloadType: Deployment
labels: {}
nameOverride: ""
fullnameOverride: ""

### Container Variables
image: {}
command: null
args: []
envVars:
  REDIS_URL: "redis://redis-stack-server:6379"
  # GOOGLE_APPLICATION_CREDENTIALS: /absolute/path/credentials.json
files: {}
  # /absolute/path/credentials.json:
  #   {
  #     "type": "service_account",
  #     "project_id": "some-project",
  #     "private_key_id": "aabababababababababa",
  #     "client_email": "some-client@some-project.iam.gserviceaccount.com",
  #     "client_id": "01010101010101",
  #   }

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

### Pod Variables
imagePullSecrets: []
serviceAccount:
  create: false
  name: ""
volumes: []
extraContainers: []
podSecurityContext: {}
  # fsGroup: 2000
nodeSelector: {}
tolerations: []
affinity: {}

### Additional Configuration
replicaCount: 1
pvcs: []
service:
  enabled: false
  type: ClusterIP
  # port: 80
  # portName: http

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

redis-stack-server:
  redis_stack_server:
    storage_class: "hostpath"
